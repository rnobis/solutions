********************************************
* DO NOT SEND EMAIL TO THE TEACHING STAFF. *
********************************************

If it is related to the course, please post it in Blackboard -
Discussion.  Use email for only private issues.  The teaching staff
will ignore email that is related to the course and not private.  You
will not receive any response.

=====================================================================

In this assignment, we will compute several properties of an array of
integers.

PLEASE NOTE: 
(1) You should only modify the file answer01.c 
(2) You can modify this file however you want, including adding additional
functions. (This is true for all assignments.)  
(3) You must only submit the file answer01.c for marking
(4) Parts of the assignment have been written for you, but these parts do 
not appear in the file answer01.c. Please browse through these files 
(pa01.c and pa01.h).

You should not add the main function to answer01.c.  Doing so will
guarantee that your will program fail and you will definitely receive
zero.  The main function is already provided in pa01.c.

If a file is marked as "do not modify this file", you should not
modify this file in any circumstance. Modifying this file will
guarantee that your program will fail and you will definitely receive
zero.  If you believe there are mistakes in the code given to you,
please post your questions, corrections, or suggestions in Blackboard
Discussion.

This assignment includes many pieces of useful information and you
will learn these pieces in the coming weeks.  Do not worry if you do
not understand everything in the first week.  Focus on writing the
functions in answer01.c.  If you have taken the prerequisite CS 159,
you should have no problem filling the code for these functions.

If you find this assignment unreasonably difficult, you do not have
the necessary background taking ECE 264.  It is advised that you take
CS 159 first.  If you cannot do this assignment easily, you are likely
to find ECE 264 unreachable.

If you need help, please visit the intructors' or the teaching
assistants' office hours. 

DO NOT SEND EMAIL.  Post your questions in Blackboard - Discussion.

================================ 
= Getting the Assignment Files =
================================

Assignments will be distributed to you via the version control system
"git". This very useful program will allow the teaching staff to make
modifications to assignments as problems arise, and then distribute
them to all of you. Version control will show exactly which lines have
been changed.  As students, you will have "read-only" access to the
assignment repository. The URL for the repository is:

https://github.com/yunghsianglu/ECE264Assignments.git

Use the "clone" command to get a copy of the files:

git clone https://github.com/yunghsianglu/ECE264Assignments.git

Once you have a copy of the files, you can "cd" into the repository
and use the "pull" command to get the latest version of the assignment
files:

cd ECE264Assignments 
git pull

Sometimes mistakes are found in the assignments. The instructor will
tell you to obtain a new version and you should type the command

git pull

====================== 
= Assignment Details = 
======================

In this assignment we shall: 
* add all elements in an array of integers 
* determine whether any element in the array is a negative number 
* determine whether the elements' values are always increasing

This program has the following files: 
(1) pa01.h      A header file 
(2) pa01.c      A C file that contains "main", the program entry point
(3) answer01.c  A C file (only edit and submit this file)
(4) Makefile    A file that "make" uses to build and test your solution

To use the makefile, you need to cd into the assignment directory and
type "make" in the Linux terminal. Type "make help" for a list of
options. For example:

ECE2644Assignments/PA01 > make help

After you finish this program, upload answer01.c to Blackboard and
submit it. Your program /must/, *must*, !!MUST!! compile against the 
original assignment files (pa01.c and pa01.h), otherwise you will get
zero. NO EXCEPTIONS.

You MUST test your program on native Linux (not cygwin, not
Virtualbox, not MinGW ...).  There were many cases when students
incorrect programs appeared working on cygwin or virtualbox.

========================= 
= Using Version Control =
=========================

For PA03, PA04, and PA05, you will need to show evidence that you are
using version control. You can use the version control tool of your
preferrence; however, we recommend that you learn git. The evidence
required is the log file of your commits.

Version control is not required for PA01; however, it is worth
figuring this out as soon as possible.  Version control is an
*essential* tool for computer programming in groups, and is also
highly recommended when working on single person projects as
well. Spend the time now to understand what you are doing, and that
will *save* you a lot of time later.

Conceptually there are two repositories to deal with: the repository
where you do your work (you control everything), and the repository
that the teaching staff use to distribute assignments to you. (URL
given above.) This second repository will hence-forth be called
"R-problem". The repository that you control will be referred to as
"R-answer". These *must* be in /separate/ directories in your account.

If you mix the two repositories, you run the risk of erasing your work
when the instrutor asks everyone in the class to do "git pull".

Do not modify anything in R-problem because it is read-only for
you. When you need to do a "git pull", git will want to delete all
your changes! IF YOU MODIFY R-problem, YOUR CODE WILL BE ERASED WHEN
YOU DO "git pull".

To set up R-answer, you will need to do some reading on the
Internet. There are many useful tutorials, and a bit of jargon that
you must master. The Internet contains everything you need to know.
Below is the URL for the official git tutorial. It is a starting point
for your learning of git:

http://git-scm.com/docs/gittutorial

Every non-trivial project is managed by version control.  

Once you have done "git pull" (or git clone for the very first time)
in R-problem, you will need to immediately copy the problems to
R-answer. Then, write your programs in R-answer, and remember to
commit and push often. It is advised that you COMMIT AND PUSH AT LEAST
ONCE A DAY. Since this is a one-person project, it is perfectly
acceptable if you commit and push every hour or every ten minutes.

In the rare cases when you are suspected of copying code, the commit
log can be used as definitive evidence that you are developing your
solutions step by step. However, if you commit only once before
submission, you will not be able to use your commit log as evidence
for your defence.

ECE 264 requires that you submit source-control logs for only three
assignments (PA03-PA05). After these three assignments, you are
expected to continue using version control by yourself, even though it
is no longer a requirement for grading.

You can use the version control system of your preference (git, svn,
cvs...)  as long as you can provide evidence that you are using
version control.

IF YOU DO NOT PROVIDE EVIDENCE OF USING VERSION CONTROL in PA03-PA05,
YOUR SUBSEQUENTIAL ASSIGNMENTS WILL NOT BE GRADED AND YOU WILL
DEFINITELY RECEIVE F IN THIS COURSE. THERE IS NO EXCEPTION.

